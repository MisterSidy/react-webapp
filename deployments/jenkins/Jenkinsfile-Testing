pipeline {
    agent any
     options {
        buildDiscarder(logRotator(numToKeepStr: '3'))
      }
       environment {
        DOMAIN_NAME = ""
        PUBLIC_S3_BUCKET = ""
        DOCKERHUB_CREDENTIALS = credentials('globaldockerhub')
        appName = "server"
        registry = ""
        registryCredential = ""
        projectPath = ""
        
        // AWS_SSH_KEY = credentials('AWS_SSH_KEY')
      }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/joelwembo/prodx-reactwebui-react-demo-1.git'
            }
        }

        //  stage('Install Dependencies') {
        //     steps {
        //         sh 'npm install'
        //     }
        // }

        //  stage('Run Mocha Tests') {
        //     steps {
        //         sh 'npm run test' // Assuming your tests are run with 'npm test'
        //     }
        // }

        // stage('Build React App') {
        //     steps {
        //         sh 'npm run build' // Build the React application only if tests pass (conditional stage success)
        //     }
        // }

        stage('Provision AWS Infrastructure (Terraform)') {
            steps {
                dir('deployments/terraform/terraform-cloudfront-route53-acm') {
                    sh "pwd"
                    sh "terraform version"
                    sh 'terraform init -lock=false' // Initialize Terraform
                    sh 'terraform apply -auto-approve -input=false -lock=false' // Apply Terraform configuration (requires confirmation)
                }
            }
        }
        stage('Deploy to CloudFront') {
            steps {
                // Upload built React app to S3 bucket (replace with your upload script)
                sh 'aws s3 cp build/ s3://socialcloudsync.com/ --recursive --profile default'
                // Check if Cloudfront was created && Invalidate CloudFront cache to ensure latest content is served (replace with your invalidation script)
                // sh 'aws cloudfront create-invalidation --distribution-id your-distribution-id --paths "/*" --profile default'
            }
        }
    }

}