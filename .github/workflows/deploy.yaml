# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: CI/CD Pipeline for React App to AWS EKS

on:
  push:
    branches: ['master']
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

  push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    needs: ['build']
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker build action
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker build -t joelwembo/prodxcloud:latest  --no-cache .
      - run: docker push joelwembo/prodxcloud:latest  

  deploy:
    runs-on: ubuntu-latest
    needs: ['build', 'push-docker-image']
    steps:
      - name: AWS EKS Deployment
        uses: actions/checkout@v3

      - name: Pull the Docker image
        run: docker pull joelwembo/prodxcloud:latest

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name actions_eks_react
    
      - name: Deploy to EKS
        run: kubectl apply -f deployment.yaml 

      - name: Deploy to EKS
        run: kubectl expose deployment prodxcloud-deployment --type=LoadBalancer --name=my-service   
        


     
